/* ==== Responsive Skills Hex Grid (replaces the old .hexagon* rules) ==== */

/* Grid that auto-fits tiles from desktop â†’ mobile */
.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(clamp(110px, 16vw, 170px), 1fr));
  gap: clamp(10px, 2vw, 18px);
  align-items: center;
  justify-items: center;
  margin: 0 auto;
  max-width: 1000px;
  padding: clamp(4px, 1vw, 8px);
  list-style: none;
}

.skill { width: 100%; display: flex; justify-content: center; }

/* Scalable hexagon using clip-path + aspect-ratio */
.hex {
  width: 100%;
  aspect-ratio: 1 / 0.866; /* regular hex proportion */
  background: #fff;
  box-shadow: var(--shadow);
  border-radius: 14px;            /* softens the corners slightly */
  clip-path: polygon(25% 0, 75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%);
  position: relative;
  transition: transform .22s ease, box-shadow .22s ease;
  outline: none;
}

.hex::after { /* subtle highlight */
  content: "";
  position: absolute;
  inset: 2px;
  border-radius: inherit;
  clip-path: inherit;
  background: linear-gradient(180deg, rgba(255,255,255,.45), rgba(255,255,255,0));
  pointer-events: none;
  opacity: .35;
}

.hex-inner {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: clamp(6px, 1.4vw, 12px);
  gap: 6px;
}

.hex-inner i {
  font-size: clamp(1.35rem, 2.8vw, 2rem);
  color: var(--secondary-color);
  transition: color .18s ease;
}

.hex-inner .label {
  font-size: clamp(.8rem, 1.8vw, 1rem);
  font-weight: 600;
  color: var(--text-dark);
}

.hex:hover {
  transform: translateY(-6px);
  box-shadow: 0 16px 32px rgba(99, 102, 241, 0.3);
}

.hex:hover i { color: var(--primary-color); }

/* Keyboard accessibility */
.hex:focus-visible {
  box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.35), var(--shadow);
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .hex, .hex * { transition: none !important; }
}
